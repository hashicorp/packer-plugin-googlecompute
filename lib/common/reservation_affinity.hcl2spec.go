// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package common

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatReservationAffinity is an auto-generated flat version of ReservationAffinity.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatReservationAffinity struct {
	ConsumeReservationType *string  `mapstructure:"consume_reservation_type" cty:"consume_reservation_type" hcl:"consume_reservation_type"`
	Key                    *string  `mapstructure:"key" cty:"key" hcl:"key"`
	Values                 []string `mapstructure:"values" cty:"values" hcl:"values"`
}

// FlatMapstructure returns a new FlatReservationAffinity.
// FlatReservationAffinity is an auto-generated flat version of ReservationAffinity.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*ReservationAffinity) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatReservationAffinity)
}

// HCL2Spec returns the hcl spec of a ReservationAffinity.
// This spec is used by HCL to read the fields of ReservationAffinity.
// The decoded values from this spec will then be applied to a FlatReservationAffinity.
func (*FlatReservationAffinity) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"consume_reservation_type": &hcldec.AttrSpec{Name: "consume_reservation_type", Type: cty.String, Required: false},
		"key":                      &hcldec.AttrSpec{Name: "key", Type: cty.String, Required: false},
		"values":                   &hcldec.AttrSpec{Name: "values", Type: cty.List(cty.String), Required: false},
	}
	return s
}
